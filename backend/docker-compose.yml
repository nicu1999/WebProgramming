version: '3.4'
services:
  mongodb:
    image: mongo
    container_name: mongo_container
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db/
    networks:
      - mongodb-n
  mongo-express:
    image: mongo-express
    container_name: gui
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - mongodb-n
      
  rabbitmq:
    image: rabbitmq
    container_name: queue
    ports:
      - 5672:5672
    networks:
      - queue-n
    

  # kong-database:
  #   image: postgres:latest
  #   container_name: kong_db
  #   environment:
  #     POSTGRES_DB: kong
  #     POSTGRES_USER: kong
  #     POSTGRES_PASSWORD: kong
  #   networks:
  #     - kong-net
    
  # kong-migrations:
  #   image: kong:latest
  #   command: kong migrations bootstrap && kong migrations up && kong migrations finish
  #   depends_on:
  #     - kong-database
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-db
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: kong
  #     KONG_PG_DATABASE: kong
  #   networks:
  #     - kong-net
  
  # kong:
  #   image: kong:latest
  #   container_name: kong-api
  #   depends_on:
  #     - kong-database:
  #   environment:
  #     KONG_DATABASE: postgres
  #     KONG_PG_HOST: kong-db
  #     KONG_PG_USER: kong
  #     KONG_PG_PASSWORD: kong
  #     KONG_PG_DATABASE: kong
  #     KONG_ADMIN_LISTEN: 0.0.0.0:8001
  #   networks:
  #     - kong-net
  #   ports:
  #     - "8000:8000"
  #     - "8001:8001"
  #   depends_on:
  #     - kong-database

  frontened:
    #image: gitlab.cs.pub.ro/project_idp_pweb/frontend:latest
    image: frontend
    build: ../refugee-helper
    ports:
      - "8080:8080"
    networks:
      - kong-net

  # server:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-Server
  #   depends_on:
  #     - rabbitmq
  #   ports:
  #     - 6001:6001
  #   networks:
  #     - queue-n

  # mail:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-Mail
  #   networks:
  #     - queue-n


  # email:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile-Mail
  #   depends_on:
  #     - rabbitmq
  #   image: server
  #   ports:
  #     - 6001:6001
  #   networks:
  #     - queue-n
  
  # prometheus:
  #   image: prom/prometheus
  #   volumes:
  #       - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  #   ports:
  #       - 9090:9090
  #   networks:
  #       - monitoring
  #       - visualizing

  # loki:
  #   image: grafana/loki
  #   volumes:
  #       - ./loki/loki.yml:/etc/config/loki.yml
  #       - ./loki/wal:/wal
  #   entrypoint:
  #       - /usr/bin/loki
  #       - -config.file=/etc/config/loki.yml
  #   ports:
  #       - 3100:3100
  #   networks:
  #       - logging
  #       - visualizing

  # grafana:
  #     image: grafana/grafana
  #     volumes:
  #         - grafana-volume:/var/lib/grafana
  #     ports:
  #         - 3000:3000
  #     depends_on:
  #         - loki
  #     networks:
  #         - visualizing
        
volumes:
  mongo-data:
    driver: local
  grafana-volume:
networks:
  mongodb-n:
    driver: bridge
  queue-n:
    driver: bridge
  kong-net:
  visualizing:
  monitoring:
  logging: